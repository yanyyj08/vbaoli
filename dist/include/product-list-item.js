/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(97)
	var __weex_template__ = __webpack_require__(101)
	var __weex_style__ = __webpack_require__(102)
	var __weex_script__ = __webpack_require__(103)
	
	__weex_define__('@weex-component/f57394687ce31eba58a8828415be8811', [], function(__weex_require__, __weex_exports__, __weex_module__) {
	
	    __weex_script__(__weex_module__, __weex_exports__, __weex_require__)
	    if (__weex_exports__.__esModule && __weex_exports__.default) {
	      __weex_module__.exports = __weex_exports__.default
	    }
	
	    __weex_module__.exports.template = __weex_template__
	
	    __weex_module__.exports.style = __weex_style__
	
	})
	
	__weex_bootstrap__('@weex-component/f57394687ce31eba58a8828415be8811',undefined,undefined)

/***/ },

/***/ 97:
/***/ function(module, exports, __webpack_require__) {

	var __weex_template__ = __webpack_require__(98)
	var __weex_style__ = __webpack_require__(99)
	var __weex_script__ = __webpack_require__(100)
	
	__weex_define__('@weex-component/progress-circle', [], function(__weex_require__, __weex_exports__, __weex_module__) {
	
	    __weex_script__(__weex_module__, __weex_exports__, __weex_require__)
	    if (__weex_exports__.__esModule && __weex_exports__.default) {
	      __weex_module__.exports = __weex_exports__.default
	    }
	
	    __weex_module__.exports.template = __weex_template__
	
	    __weex_module__.exports.style = __weex_style__
	
	})


/***/ },

/***/ 98:
/***/ function(module, exports) {

	module.exports = {
	  "type": "div",
	  "classList": [
	    "content"
	  ],
	  "attr": {
	    "refs": "combo"
	  },
	  "id": "progress"
	}

/***/ },

/***/ 99:
/***/ function(module, exports) {

	module.exports = {
	  "content": {
	    "position": "absolute",
	    "left": 0,
	    "top": 0,
	    "right": 0,
	    "bottom": 0
	  },
	  "progress": {
	    "position": "absolute",
	    "left": 0,
	    "top": 0,
	    "right": 0,
	    "bottom": 0
	  }
	}

/***/ },

/***/ 100:
/***/ function(module, exports) {

	module.exports = function(module, exports, __weex_require__){'use strict';
	
	var dom = __weex_require__('@weex-module/dom');
	module.exports = {
	    data: function () {return {
	        currentProgress: 0,
	        productProgress: 0
	    }},
	    created: function created() {
	        console.log(this.$el('progress'));
	    },
	    methods: {
	        drawProgress: function drawProgress() {},
	        loadProgress: function (_loadProgress) {
	            function loadProgress() {
	                return _loadProgress.apply(this, arguments);
	            }
	
	            loadProgress.toString = function () {
	                return _loadProgress.toString();
	            };
	
	            return loadProgress;
	        }(function () {
	            if (this._parent.currentProgress >= this._parent.productProgress) {
	                clearInterval(loadProgress);
	            }
	            this._parent.currentProgress++;
	            console.log(this._parent.currentProgress);
	        })
	    }
	};}
	/* generated by weex-loader */


/***/ },

/***/ 101:
/***/ function(module, exports) {

	module.exports = {
	  "type": "div",
	  "classList": [
	    "content"
	  ],
	  "children": [
	    {
	      "type": "h3",
	      "classList": [
	        "p01"
	      ],
	      "children": [
	        {
	          "type": "i",
	          "classList": function () {return ['icon', this.iconClass]}
	        },
	        {
	          "type": "text",
	          "style": {
	            "fontSize": 28
	          },
	          "attr": {
	            "value": function () {return this.title}
	          }
	        }
	      ]
	    },
	    {
	      "type": "div",
	      "classList": [
	        "p02"
	      ],
	      "children": [
	        {
	          "type": "div",
	          "classList": [
	            "d01"
	          ],
	          "children": [
	            {
	              "type": "div",
	              "style": {
	                "flexDirection": "row",
	                "alignItems": "flex-end",
	                "color": "#ff6531"
	              },
	              "children": [
	                {
	                  "type": "text",
	                  "style": {
	                    "fontSize": 44
	                  },
	                  "attr": {
	                    "value": function () {return this.percent}
	                  }
	                },
	                {
	                  "type": "text",
	                  "style": {
	                    "marginLeft": 4,
	                    "marginBottom": 4,
	                    "fontSize": 18
	                  },
	                  "attr": {
	                    "value": "%"
	                  }
	                }
	              ]
	            },
	            {
	              "type": "text",
	              "style": {
	                "marginTop": 16,
	                "fontSize": 18,
	                "color": "#999999"
	              },
	              "attr": {
	                "value": "预期年化固定收益率"
	              }
	            }
	          ]
	        },
	        {
	          "type": "div",
	          "classList": [
	            "d02"
	          ],
	          "children": [
	            {
	              "type": "progress-circle",
	              "attr": {
	                "productProgress": function () {return this.productProgress}
	              }
	            }
	          ]
	        },
	        {
	          "type": "div",
	          "classList": [
	            "d03"
	          ],
	          "children": [
	            {
	              "type": "div",
	              "style": {
	                "flexDirection": "row",
	                "alignItems": "flex-end"
	              },
	              "children": [
	                {
	                  "type": "text",
	                  "style": {
	                    "color": "#111111",
	                    "fontSize": 36
	                  },
	                  "attr": {
	                    "value": function () {return this.month}
	                  }
	                },
	                {
	                  "type": "text",
	                  "style": {
	                    "marginBottom": 6,
	                    "fontSize": 20
	                  },
	                  "attr": {
	                    "value": "个月"
	                  }
	                }
	              ]
	            },
	            {
	              "type": "text",
	              "style": {
	                "marginTop": 8,
	                "fontSize": 20,
	                "color": "#999999"
	              },
	              "attr": {
	                "value": "期限"
	              }
	            }
	          ]
	        },
	        {
	          "type": "div",
	          "classList": [
	            "d04"
	          ],
	          "children": [
	            {
	              "type": "div",
	              "classList": [
	                "invest-btn"
	              ],
	              "events": {
	                "click": "toInvest"
	              },
	              "children": [
	                {
	                  "type": "text",
	                  "style": {
	                    "display": "flex",
	                    "fontSize": 22
	                  },
	                  "attr": {
	                    "value": "立即投资"
	                  }
	                }
	              ]
	            },
	            {
	              "type": "text",
	              "classList": [
	                "d04-t01"
	              ],
	              "style": {
	                "marginTop": 10,
	                "fontSize": 20,
	                "color": "#999999"
	              },
	              "attr": {
	                "value": function () {return '还款方式:' + (this.paymentMethod)}
	              }
	            }
	          ]
	        }
	      ]
	    }
	  ]
	}

/***/ },

/***/ 102:
/***/ function(module, exports) {

	module.exports = {
	  "content": {
	    "position": "relative",
	    "marginTop": 30,
	    "paddingLeft": 40,
	    "height": 280,
	    "borderWidth": 1,
	    "borderStyle": "solid",
	    "borderColor": "#dddddd",
	    "borderLeft": 0,
	    "borderRight": 0,
	    "backgroundColor": "#ffffff"
	  },
	  "p01": {
	    "flexDirection": "row",
	    "alignItems": "center",
	    "height": 90,
	    "color": "#111111",
	    "borderBottom": "1px solid #ddd"
	  },
	  "icon": {
	    "display": "flex",
	    "marginRight": 20,
	    "width": 40,
	    "height": 40
	  },
	  "icon-new": {
	    "background": "url(../../images/icon-new.png) no-repeat center",
	    "backgroundSize": "contain"
	  },
	  "icon-one": {
	    "background": "url(../../images/icon-one.png) no-repeat center",
	    "backgroundSize": "contain"
	  },
	  "icon-three": {
	    "background": "url(../../images/icon-three.png) no-repeat center",
	    "backgroundSize": "contain"
	  },
	  "icon-half-year": {
	    "background": "url(../../images/icon-half-year.png) no-repeat center",
	    "backgroundSize": "contain"
	  },
	  "icon-year": {
	    "background": "url(../../images/icon-year.png) no-repeat center",
	    "backgroundSize": "contain"
	  },
	  "p02": {
	    "flexDirection": "row",
	    "justifyContent": "space-between",
	    "alignItems": "center",
	    "height": 186
	  },
	  "d01": {
	    "width": 260
	  },
	  "d02": {
	    "width": 100,
	    "height": 100,
	    "backgroundColor": "#f1f1f1"
	  },
	  "d03": {
	    "alignItems": "center",
	    "width": 110,
	    "textAlign": "center"
	  },
	  "d04": {
	    "alignItems": "center",
	    "width": 240,
	    "justifyContent": "center"
	  },
	  "invest-btn": {
	    "width": 166,
	    "height": 58,
	    "lineHeight": 58,
	    "color": "#ffffff",
	    "textAlign": "center",
	    "borderRadius": 8,
	    "backgroundColor": "#ff9125"
	  }
	}

/***/ },

/***/ 103:
/***/ function(module, exports) {

	module.exports = function(module, exports, __weex_require__){'use strict';
	
	module.exports = {
	    data: function () {return {
	        baseUrl: '',
	        investStatus: 1,
	        isNew: false,
	        iconClass: 'new',
	        title: '新手专享',
	        percent: '10.00',
	        month: 1,
	        paymentMethod: '一次结清',
	        productProgress: 56
	    }},
	    created: function created() {
	        if (this.isNew) {
	            this.iconClass = 'icon-new';
	        } else {
	            switch (this.month) {
	                case 1:
	                    this.iconClass = 'icon-one';break;
	                case 3:
	                    this.iconClass = 'icon-three';break;
	                case 6:
	                    this.iconClass = 'icon-half-year';break;
	                case 12:
	                    this.iconClass = 'icon-year';break;
	            }
	        }
	    },
	    methods: {
	        toInvest: function toInvest() {
	            this.$openURL(this.baseUrl + 'modules/borrow/productDetails.js');
	        }
	    }
	
	};}
	/* generated by weex-loader */


/***/ }

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,